{"ast":null,"code":"import { useMemo as e, useRef as t, useEffect as i, useState as n, useCallback as a, createElement as r, Fragment as o } from \"react\";\nimport { usePropertyAccessor as d, useValueFormatter as l, degreesToRadians as s, radiansToDegrees as c, Container as u, useDimensions as v, bindDefs as f, SvgWrapper as g, ResponsiveWrapper as L, useTheme as h, getRelativeCursor as b } from \"@nivo/core\";\nimport { useArcGenerator as A, computeArcBoundingBox as p, ArcsLayer as k, ArcLinkLabelsLayer as I, ArcLabelsLayer as R, useArcLabels as m, useArcLinkLabels as O, drawCanvasArcLinkLabels as C, drawCanvasArcLabels as x, findArcUnderCursor as w } from \"@nivo/arcs\";\nimport { BoxLegendSvg as M, renderLegendToCanvas as y } from \"@nivo/legends\";\nimport { jsx as W, Fragment as S } from \"react/jsx-runtime\";\nimport { pie as T } from \"d3-shape\";\nimport { useOrdinalColorScale as D, useInheritedColor as V } from \"@nivo/colors\";\nimport { BasicTooltip as B, useTooltip as G } from \"@nivo/tooltip\";\nfunction E() {\n  return E = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var i = arguments[t];\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (e[n] = i[n]);\n    }\n    return e;\n  }, E.apply(this, arguments);\n}\nfunction F(e, t) {\n  if (null == e) return {};\n  var i,\n    n,\n    a = {},\n    r = Object.keys(e);\n  for (n = 0; n < r.length; n++) i = r[n], t.indexOf(i) >= 0 || (a[i] = e[i]);\n  return a;\n}\nvar H,\n  X = function (e) {\n    var t = e.width,\n      i = e.height,\n      n = e.legends,\n      a = e.data,\n      r = e.toggleSerie;\n    return W(S, {\n      children: n.map(function (e, n) {\n        var o;\n        return W(M, E({}, e, {\n          containerWidth: t,\n          containerHeight: i,\n          data: null != (o = e.data) ? o : a,\n          toggleSerie: e.toggleSerie ? r : void 0\n        }), n);\n      })\n    });\n  },\n  Y = {\n    id: \"id\",\n    value: \"value\",\n    sortByValue: !1,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n    layers: [\"arcs\", \"arcLinkLabels\", \"arcLabels\", \"legends\"],\n    startAngle: 0,\n    endAngle: 360,\n    fit: !0,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n    borderWidth: 0,\n    borderColor: {\n      from: \"color\",\n      modifiers: [[\"darker\", 1]]\n    },\n    enableArcLabels: !0,\n    arcLabel: \"formattedValue\",\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: .5,\n    arcLabelsTextColor: {\n      theme: \"labels.text.fill\"\n    },\n    enableArcLinkLabels: !0,\n    arcLinkLabel: \"id\",\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: {\n      theme: \"labels.text.fill\"\n    },\n    arcLinkLabelsColor: {\n      theme: \"axis.ticks.line.stroke\"\n    },\n    colors: {\n      scheme: \"nivo\"\n    },\n    defs: [],\n    fill: [],\n    isInteractive: !0,\n    animate: !0,\n    motionConfig: \"gentle\",\n    transitionMode: \"innerRadius\",\n    tooltip: function (e) {\n      var t = e.datum;\n      return W(B, {\n        id: t.id,\n        value: t.formattedValue,\n        enableChip: !0,\n        color: t.color\n      });\n    },\n    legends: [],\n    role: \"img\",\n    pixelRatio: \"undefined\" != typeof window && null != (H = window.devicePixelRatio) ? H : 1\n  },\n  j = [\"points\"],\n  P = function (t) {\n    var i = t.data,\n      n = t.id,\n      a = void 0 === n ? Y.id : n,\n      r = t.value,\n      o = void 0 === r ? Y.value : r,\n      s = t.valueFormat,\n      c = t.colors,\n      u = void 0 === c ? Y.colors : c,\n      v = d(a),\n      f = d(o),\n      g = l(s),\n      L = D(u, \"id\");\n    return e(function () {\n      return i.map(function (e) {\n        var t,\n          i = v(e),\n          n = f(e),\n          a = {\n            id: i,\n            label: null != (t = e.label) ? t : i,\n            hidden: !1,\n            value: n,\n            formattedValue: g(n),\n            data: e\n          };\n        return E({}, a, {\n          color: L(a)\n        });\n      });\n    }, [i, v, f, g, L]);\n  },\n  q = function (n) {\n    var a = n.data,\n      r = n.startAngle,\n      o = n.endAngle,\n      d = n.innerRadius,\n      l = n.outerRadius,\n      u = n.padAngle,\n      v = n.sortByValue,\n      f = n.activeId,\n      g = n.activeInnerRadiusOffset,\n      L = n.activeOuterRadiusOffset,\n      h = n.hiddenIds,\n      b = n.forwardLegendData,\n      A = e(function () {\n        var e = T().value(function (e) {\n          return e.value;\n        }).startAngle(s(r)).endAngle(s(o)).padAngle(s(u));\n        return v || e.sortValues(null), e;\n      }, [r, o, u, v]),\n      p = e(function () {\n        var e = a.filter(function (e) {\n          return !h.includes(e.id);\n        });\n        return {\n          dataWithArc: A(e).map(function (e) {\n            var t = Math.abs(e.endAngle - e.startAngle);\n            return E({}, e.data, {\n              arc: {\n                index: e.index,\n                startAngle: e.startAngle,\n                endAngle: e.endAngle,\n                innerRadius: f === e.data.id ? d - g : d,\n                outerRadius: f === e.data.id ? l + L : l,\n                thickness: l - d,\n                padAngle: e.padAngle,\n                angle: t,\n                angleDeg: c(t)\n              }\n            });\n          }),\n          legendData: a.map(function (e) {\n            return {\n              id: e.id,\n              label: e.label,\n              color: e.color,\n              hidden: h.includes(e.id),\n              data: e\n            };\n          })\n        };\n      }, [A, a, h, f, d, g, l, L]),\n      k = p.legendData,\n      I = t(b);\n    return i(function () {\n      \"function\" == typeof I.current && I.current(k);\n    }, [I, k]), p;\n  },\n  z = function (e) {\n    var t = e.activeId,\n      i = e.onActiveIdChange,\n      r = e.defaultActiveId,\n      o = void 0 !== t,\n      d = n(o ? null : void 0 === r ? null : r),\n      l = d[0],\n      s = d[1];\n    return {\n      activeId: o ? t : l,\n      setActiveId: a(function (e) {\n        i && i(e), o || s(e);\n      }, [o, i, s])\n    };\n  },\n  J = function (e) {\n    var t = e.data,\n      i = e.radius,\n      r = e.innerRadius,\n      o = e.startAngle,\n      d = void 0 === o ? Y.startAngle : o,\n      l = e.endAngle,\n      c = void 0 === l ? Y.endAngle : l,\n      u = e.padAngle,\n      v = void 0 === u ? Y.padAngle : u,\n      f = e.sortByValue,\n      g = void 0 === f ? Y.sortByValue : f,\n      L = e.cornerRadius,\n      h = void 0 === L ? Y.cornerRadius : L,\n      b = e.activeInnerRadiusOffset,\n      p = void 0 === b ? Y.activeInnerRadiusOffset : b,\n      k = e.activeOuterRadiusOffset,\n      I = void 0 === k ? Y.activeOuterRadiusOffset : k,\n      R = e.activeId,\n      m = e.onActiveIdChange,\n      O = e.defaultActiveId,\n      C = e.forwardLegendData,\n      x = z({\n        activeId: R,\n        onActiveIdChange: m,\n        defaultActiveId: O\n      }),\n      w = x.activeId,\n      M = x.setActiveId,\n      y = n([]),\n      W = y[0],\n      S = y[1],\n      T = q({\n        data: t,\n        startAngle: d,\n        endAngle: c,\n        innerRadius: r,\n        outerRadius: i,\n        padAngle: v,\n        sortByValue: g,\n        activeId: w,\n        activeInnerRadiusOffset: p,\n        activeOuterRadiusOffset: I,\n        hiddenIds: W,\n        forwardLegendData: C\n      }),\n      D = a(function (e) {\n        S(function (t) {\n          return t.indexOf(e) > -1 ? t.filter(function (t) {\n            return t !== e;\n          }) : [].concat(t, [e]);\n        });\n      }, []);\n    return E({}, T, {\n      arcGenerator: A({\n        cornerRadius: h,\n        padAngle: s(v)\n      }),\n      setActiveId: M,\n      toggleSerie: D\n    });\n  },\n  K = function (t) {\n    var i = t.data,\n      r = t.width,\n      o = t.height,\n      d = t.innerRadius,\n      l = void 0 === d ? Y.innerRadius : d,\n      c = t.startAngle,\n      u = void 0 === c ? Y.startAngle : c,\n      v = t.endAngle,\n      f = void 0 === v ? Y.endAngle : v,\n      g = t.padAngle,\n      L = void 0 === g ? Y.padAngle : g,\n      h = t.sortByValue,\n      b = void 0 === h ? Y.sortByValue : h,\n      k = t.cornerRadius,\n      I = void 0 === k ? Y.cornerRadius : k,\n      R = t.fit,\n      m = void 0 === R ? Y.fit : R,\n      O = t.activeInnerRadiusOffset,\n      C = void 0 === O ? Y.activeInnerRadiusOffset : O,\n      x = t.activeOuterRadiusOffset,\n      w = void 0 === x ? Y.activeOuterRadiusOffset : x,\n      M = t.activeId,\n      y = t.onActiveIdChange,\n      W = t.defaultActiveId,\n      S = t.forwardLegendData,\n      T = z({\n        activeId: M,\n        onActiveIdChange: y,\n        defaultActiveId: W\n      }),\n      D = T.activeId,\n      V = T.setActiveId,\n      B = n([]),\n      G = B[0],\n      H = B[1],\n      X = e(function () {\n        var e,\n          t = Math.min(r, o) / 2,\n          i = t * Math.min(l, 1),\n          n = r / 2,\n          a = o / 2;\n        if (m) {\n          var d = p(n, a, t, u - 90, f - 90),\n            s = d.points,\n            c = F(d, j),\n            v = Math.min(r / c.width, o / c.height),\n            g = {\n              width: c.width * v,\n              height: c.height * v\n            };\n          g.x = (r - g.width) / 2, g.y = (o - g.height) / 2, n = (n - c.x) / c.width * c.width * v + g.x, a = (a - c.y) / c.height * c.height * v + g.y, e = {\n            box: c,\n            ratio: v,\n            points: s\n          }, t *= v, i *= v;\n        }\n        return {\n          centerX: n,\n          centerY: a,\n          radius: t,\n          innerRadius: i,\n          debug: e\n        };\n      }, [r, o, l, u, f, m]),\n      P = q({\n        data: i,\n        startAngle: u,\n        endAngle: f,\n        innerRadius: X.innerRadius,\n        outerRadius: X.radius,\n        padAngle: L,\n        sortByValue: b,\n        activeId: D,\n        activeInnerRadiusOffset: C,\n        activeOuterRadiusOffset: w,\n        hiddenIds: G,\n        forwardLegendData: S\n      }),\n      J = a(function (e) {\n        H(function (t) {\n          return t.indexOf(e) > -1 ? t.filter(function (t) {\n            return t !== e;\n          }) : [].concat(t, [e]);\n        });\n      }, []);\n    return E({\n      arcGenerator: A({\n        cornerRadius: I,\n        padAngle: s(L)\n      }),\n      activeId: D,\n      setActiveId: V,\n      toggleSerie: J\n    }, P, X);\n  },\n  N = function (t) {\n    var i = t.dataWithArc,\n      n = t.arcGenerator,\n      a = t.centerX,\n      r = t.centerY,\n      o = t.radius,\n      d = t.innerRadius;\n    return e(function () {\n      return {\n        dataWithArc: i,\n        arcGenerator: n,\n        centerX: a,\n        centerY: r,\n        radius: o,\n        innerRadius: d\n      };\n    }, [i, n, a, r, o, d]);\n  },\n  Q = function (t) {\n    var i = t.center,\n      n = t.data,\n      a = t.arcGenerator,\n      o = t.borderWidth,\n      d = t.borderColor,\n      l = t.isInteractive,\n      s = t.onClick,\n      c = t.onMouseEnter,\n      u = t.onMouseMove,\n      v = t.onMouseLeave,\n      f = t.setActiveId,\n      g = t.tooltip,\n      L = t.transitionMode,\n      h = G(),\n      b = h.showTooltipFromEvent,\n      A = h.hideTooltip,\n      p = e(function () {\n        if (l) return function (e, t) {\n          null == s || s(e, t);\n        };\n      }, [l, s]),\n      I = e(function () {\n        if (l) return function (e, t) {\n          b(r(g, {\n            datum: e\n          }), t), f(e.id), null == c || c(e, t);\n        };\n      }, [l, b, f, c, g]),\n      R = e(function () {\n        if (l) return function (e, t) {\n          b(r(g, {\n            datum: e\n          }), t), null == u || u(e, t);\n        };\n      }, [l, b, u, g]),\n      m = e(function () {\n        if (l) return function (e, t) {\n          A(), f(null), null == v || v(e, t);\n        };\n      }, [l, A, f, v]);\n    return W(k, {\n      center: i,\n      data: n,\n      arcGenerator: a,\n      borderWidth: o,\n      borderColor: d,\n      transitionMode: L,\n      onClick: p,\n      onMouseEnter: I,\n      onMouseMove: R,\n      onMouseLeave: m\n    });\n  },\n  U = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n  Z = function (e) {\n    var t = e.data,\n      i = e.id,\n      n = void 0 === i ? Y.id : i,\n      a = e.value,\n      d = void 0 === a ? Y.value : a,\n      l = e.valueFormat,\n      s = e.sortByValue,\n      c = void 0 === s ? Y.sortByValue : s,\n      u = e.layers,\n      L = void 0 === u ? Y.layers : u,\n      h = e.startAngle,\n      b = void 0 === h ? Y.startAngle : h,\n      A = e.endAngle,\n      p = void 0 === A ? Y.endAngle : A,\n      k = e.padAngle,\n      m = void 0 === k ? Y.padAngle : k,\n      O = e.fit,\n      C = void 0 === O ? Y.fit : O,\n      x = e.innerRadius,\n      w = void 0 === x ? Y.innerRadius : x,\n      M = e.cornerRadius,\n      y = void 0 === M ? Y.cornerRadius : M,\n      S = e.activeInnerRadiusOffset,\n      T = void 0 === S ? Y.activeInnerRadiusOffset : S,\n      D = e.activeOuterRadiusOffset,\n      V = void 0 === D ? Y.activeOuterRadiusOffset : D,\n      B = e.width,\n      G = e.height,\n      E = e.margin,\n      F = e.colors,\n      H = void 0 === F ? Y.colors : F,\n      j = e.borderWidth,\n      q = void 0 === j ? Y.borderWidth : j,\n      z = e.borderColor,\n      J = void 0 === z ? Y.borderColor : z,\n      U = e.enableArcLabels,\n      Z = void 0 === U ? Y.enableArcLabels : U,\n      $ = e.arcLabel,\n      _ = void 0 === $ ? Y.arcLabel : $,\n      ee = e.arcLabelsSkipAngle,\n      te = void 0 === ee ? Y.arcLabelsSkipAngle : ee,\n      ie = e.arcLabelsTextColor,\n      ne = void 0 === ie ? Y.arcLabelsTextColor : ie,\n      ae = e.arcLabelsRadiusOffset,\n      re = void 0 === ae ? Y.arcLabelsRadiusOffset : ae,\n      oe = e.arcLabelsComponent,\n      de = e.enableArcLinkLabels,\n      le = void 0 === de ? Y.enableArcLinkLabels : de,\n      se = e.arcLinkLabel,\n      ce = void 0 === se ? Y.arcLinkLabel : se,\n      ue = e.arcLinkLabelsSkipAngle,\n      ve = void 0 === ue ? Y.arcLinkLabelsSkipAngle : ue,\n      fe = e.arcLinkLabelsOffset,\n      ge = void 0 === fe ? Y.arcLinkLabelsOffset : fe,\n      Le = e.arcLinkLabelsDiagonalLength,\n      he = void 0 === Le ? Y.arcLinkLabelsDiagonalLength : Le,\n      be = e.arcLinkLabelsStraightLength,\n      Ae = void 0 === be ? Y.arcLinkLabelsStraightLength : be,\n      pe = e.arcLinkLabelsThickness,\n      ke = void 0 === pe ? Y.arcLinkLabelsThickness : pe,\n      Ie = e.arcLinkLabelsTextOffset,\n      Re = void 0 === Ie ? Y.arcLinkLabelsTextOffset : Ie,\n      me = e.arcLinkLabelsTextColor,\n      Oe = void 0 === me ? Y.arcLinkLabelsTextColor : me,\n      Ce = e.arcLinkLabelsColor,\n      xe = void 0 === Ce ? Y.arcLinkLabelsColor : Ce,\n      we = e.arcLinkLabelComponent,\n      Me = e.defs,\n      ye = void 0 === Me ? Y.defs : Me,\n      We = e.fill,\n      Se = void 0 === We ? Y.fill : We,\n      Te = e.isInteractive,\n      De = void 0 === Te ? Y.isInteractive : Te,\n      Ve = e.onClick,\n      Be = e.onMouseEnter,\n      Ge = e.onMouseMove,\n      Ee = e.onMouseLeave,\n      Fe = e.tooltip,\n      He = void 0 === Fe ? Y.tooltip : Fe,\n      Xe = e.activeId,\n      Ye = e.onActiveIdChange,\n      je = e.defaultActiveId,\n      Pe = e.transitionMode,\n      qe = void 0 === Pe ? Y.transitionMode : Pe,\n      ze = e.legends,\n      Je = void 0 === ze ? Y.legends : ze,\n      Ke = e.forwardLegendData,\n      Ne = e.role,\n      Qe = void 0 === Ne ? Y.role : Ne,\n      Ue = v(B, G, E),\n      Ze = Ue.outerWidth,\n      $e = Ue.outerHeight,\n      _e = Ue.margin,\n      et = Ue.innerWidth,\n      tt = Ue.innerHeight,\n      it = P({\n        data: t,\n        id: n,\n        value: d,\n        valueFormat: l,\n        colors: H\n      }),\n      nt = K({\n        data: it,\n        width: et,\n        height: tt,\n        fit: C,\n        innerRadius: w,\n        startAngle: b,\n        endAngle: p,\n        padAngle: m,\n        sortByValue: c,\n        cornerRadius: y,\n        activeInnerRadiusOffset: T,\n        activeOuterRadiusOffset: V,\n        activeId: Xe,\n        onActiveIdChange: Ye,\n        defaultActiveId: je,\n        forwardLegendData: Ke\n      }),\n      at = nt.dataWithArc,\n      rt = nt.legendData,\n      ot = nt.arcGenerator,\n      dt = nt.centerX,\n      lt = nt.centerY,\n      st = nt.radius,\n      ct = nt.innerRadius,\n      ut = nt.setActiveId,\n      vt = nt.toggleSerie,\n      ft = f(ye, at, Se),\n      gt = {\n        arcs: null,\n        arcLinkLabels: null,\n        arcLabels: null,\n        legends: null\n      };\n    L.includes(\"arcs\") && (gt.arcs = W(Q, {\n      center: [dt, lt],\n      data: at,\n      arcGenerator: ot,\n      borderWidth: q,\n      borderColor: J,\n      isInteractive: De,\n      onClick: Ve,\n      onMouseEnter: Be,\n      onMouseMove: Ge,\n      onMouseLeave: Ee,\n      setActiveId: ut,\n      tooltip: He,\n      transitionMode: qe\n    }, \"arcs\")), le && L.includes(\"arcLinkLabels\") && (gt.arcLinkLabels = W(I, {\n      center: [dt, lt],\n      data: at,\n      label: ce,\n      skipAngle: ve,\n      offset: ge,\n      diagonalLength: he,\n      straightLength: Ae,\n      strokeWidth: ke,\n      textOffset: Re,\n      textColor: Oe,\n      linkColor: xe,\n      component: we\n    }, \"arcLinkLabels\")), Z && L.includes(\"arcLabels\") && (gt.arcLabels = W(R, {\n      center: [dt, lt],\n      data: at,\n      label: _,\n      radiusOffset: re,\n      skipAngle: te,\n      textColor: ne,\n      transitionMode: qe,\n      component: oe\n    }, \"arcLabels\")), Je.length > 0 && L.includes(\"legends\") && (gt.legends = W(X, {\n      width: et,\n      height: tt,\n      data: rt,\n      legends: Je,\n      toggleSerie: vt\n    }, \"legends\"));\n    var Lt = N({\n      dataWithArc: at,\n      arcGenerator: ot,\n      centerX: dt,\n      centerY: lt,\n      radius: st,\n      innerRadius: ct\n    });\n    return W(g, {\n      width: Ze,\n      height: $e,\n      margin: _e,\n      defs: ft,\n      role: Qe,\n      children: L.map(function (e, t) {\n        return void 0 !== gt[e] ? gt[e] : \"function\" == typeof e ? W(o, {\n          children: r(e, Lt)\n        }, t) : null;\n      })\n    });\n  },\n  $ = function (e) {\n    var t = e.isInteractive,\n      i = void 0 === t ? Y.isInteractive : t,\n      n = e.animate,\n      a = void 0 === n ? Y.animate : n,\n      r = e.motionConfig,\n      o = void 0 === r ? Y.motionConfig : r,\n      d = e.theme,\n      l = e.renderWrapper,\n      s = F(e, U);\n    return W(u, {\n      animate: a,\n      isInteractive: i,\n      motionConfig: o,\n      renderWrapper: l,\n      theme: d,\n      children: W(Z, E({\n        isInteractive: i\n      }, s))\n    });\n  },\n  _ = function (e) {\n    return W(L, {\n      children: function (t) {\n        var i = t.width,\n          n = t.height;\n        return W($, E({\n          width: i,\n          height: n\n        }, e));\n      }\n    });\n  },\n  ee = [\"isInteractive\", \"theme\", \"renderWrapper\"],\n  te = function (n) {\n    var a = n.data,\n      o = n.id,\n      d = void 0 === o ? Y.id : o,\n      l = n.value,\n      s = void 0 === l ? Y.value : l,\n      c = n.valueFormat,\n      u = n.sortByValue,\n      f = void 0 === u ? Y.sortByValue : u,\n      g = n.startAngle,\n      L = void 0 === g ? Y.startAngle : g,\n      A = n.endAngle,\n      p = void 0 === A ? Y.endAngle : A,\n      k = n.padAngle,\n      I = void 0 === k ? Y.padAngle : k,\n      R = n.fit,\n      M = void 0 === R ? Y.fit : R,\n      S = n.innerRadius,\n      T = void 0 === S ? Y.innerRadius : S,\n      D = n.cornerRadius,\n      B = void 0 === D ? Y.cornerRadius : D,\n      F = n.activeInnerRadiusOffset,\n      H = void 0 === F ? Y.activeInnerRadiusOffset : F,\n      X = n.activeOuterRadiusOffset,\n      j = void 0 === X ? Y.activeOuterRadiusOffset : X,\n      q = n.width,\n      z = n.height,\n      J = n.margin,\n      N = n.pixelRatio,\n      Q = void 0 === N ? Y.pixelRatio : N,\n      U = n.colors,\n      Z = void 0 === U ? Y.colors : U,\n      $ = n.borderWidth,\n      _ = void 0 === $ ? Y.borderWidth : $,\n      ee = n.borderColor,\n      te = void 0 === ee ? Y.borderColor : ee,\n      ie = n.enableArcLabels,\n      ne = void 0 === ie ? Y.enableArcLabels : ie,\n      ae = n.arcLabel,\n      re = void 0 === ae ? Y.arcLabel : ae,\n      oe = n.arcLabelsSkipAngle,\n      de = void 0 === oe ? Y.arcLabelsSkipAngle : oe,\n      le = n.arcLabelsTextColor,\n      se = void 0 === le ? Y.arcLabelsTextColor : le,\n      ce = n.arcLabelsRadiusOffset,\n      ue = void 0 === ce ? Y.arcLabelsRadiusOffset : ce,\n      ve = n.enableArcLinkLabels,\n      fe = void 0 === ve ? Y.enableArcLinkLabels : ve,\n      ge = n.arcLinkLabel,\n      Le = void 0 === ge ? Y.arcLinkLabel : ge,\n      he = n.arcLinkLabelsSkipAngle,\n      be = void 0 === he ? Y.arcLinkLabelsSkipAngle : he,\n      Ae = n.arcLinkLabelsOffset,\n      pe = void 0 === Ae ? Y.arcLinkLabelsOffset : Ae,\n      ke = n.arcLinkLabelsDiagonalLength,\n      Ie = void 0 === ke ? Y.arcLinkLabelsDiagonalLength : ke,\n      Re = n.arcLinkLabelsStraightLength,\n      me = void 0 === Re ? Y.arcLinkLabelsStraightLength : Re,\n      Oe = n.arcLinkLabelsThickness,\n      Ce = void 0 === Oe ? Y.arcLinkLabelsThickness : Oe,\n      xe = n.arcLinkLabelsTextOffset,\n      we = void 0 === xe ? Y.arcLinkLabelsTextOffset : xe,\n      Me = n.arcLinkLabelsTextColor,\n      ye = void 0 === Me ? Y.arcLinkLabelsTextColor : Me,\n      We = n.arcLinkLabelsColor,\n      Se = void 0 === We ? Y.arcLinkLabelsColor : We,\n      Te = n.isInteractive,\n      De = void 0 === Te ? Y.isInteractive : Te,\n      Ve = n.onClick,\n      Be = n.onMouseMove,\n      Ge = n.tooltip,\n      Ee = void 0 === Ge ? Y.tooltip : Ge,\n      Fe = n.activeId,\n      He = n.onActiveIdChange,\n      Xe = n.defaultActiveId,\n      Ye = n.legends,\n      je = void 0 === Ye ? Y.legends : Ye,\n      Pe = n.forwardLegendData,\n      qe = t(null),\n      ze = h(),\n      Je = v(q, z, J),\n      Ke = Je.margin,\n      Ne = Je.innerWidth,\n      Qe = Je.innerHeight,\n      Ue = Je.outerWidth,\n      Ze = Je.outerHeight,\n      $e = P({\n        data: a,\n        id: d,\n        value: s,\n        valueFormat: c,\n        colors: Z\n      }),\n      _e = K({\n        data: $e,\n        width: Ne,\n        height: Qe,\n        fit: M,\n        innerRadius: T,\n        startAngle: L,\n        endAngle: p,\n        padAngle: I,\n        sortByValue: f,\n        cornerRadius: B,\n        activeInnerRadiusOffset: H,\n        activeOuterRadiusOffset: j,\n        activeId: Fe,\n        onActiveIdChange: He,\n        defaultActiveId: Xe,\n        forwardLegendData: Pe\n      }),\n      et = _e.dataWithArc,\n      tt = _e.arcGenerator,\n      it = _e.centerX,\n      nt = _e.centerY,\n      at = _e.radius,\n      rt = _e.innerRadius,\n      ot = _e.setActiveId,\n      dt = V(te, ze),\n      lt = m({\n        data: et,\n        label: re,\n        skipAngle: de,\n        offset: ue,\n        textColor: se\n      }),\n      st = O({\n        data: et,\n        skipAngle: be,\n        offset: pe,\n        diagonalLength: Ie,\n        straightLength: me,\n        label: Le,\n        linkColor: Se,\n        textOffset: we,\n        textColor: ye\n      });\n    i(function () {\n      if (qe.current) {\n        qe.current.width = Ue * Q, qe.current.height = Ze * Q;\n        var e = qe.current.getContext(\"2d\");\n        e.scale(Q, Q), e.fillStyle = ze.background, e.fillRect(0, 0, Ue, Ze), e.save(), e.translate(Ke.left, Ke.top), tt.context(e), e.save(), e.translate(it, nt), et.forEach(function (t) {\n          e.beginPath(), e.fillStyle = t.color, e.strokeStyle = dt(t), e.lineWidth = _, tt(t.arc), e.fill(), _ > 0 && e.stroke();\n        }), !0 === fe && C(e, st, ze, Ce), !0 === ne && x(e, lt, ze), e.restore(), je.forEach(function (t) {\n          y(e, E({}, t, {\n            data: et,\n            containerWidth: Ne,\n            containerHeight: Qe,\n            theme: ze\n          }));\n        });\n      }\n    }, [qe, Ne, Qe, Ue, Ze, Ke.top, Ke.left, Q, it, nt, tt, et, _, dt, ne, lt, fe, st, Ce, je, ze]);\n    var ct = e(function () {\n        return et.map(function (e) {\n          return E({\n            id: e.id\n          }, e.arc);\n        });\n      }, [et]),\n      ut = function (e) {\n        if (!qe.current) return null;\n        var t = b(qe.current, e),\n          i = t[0],\n          n = t[1],\n          a = w(Ke.left + it, Ke.top + nt, at, rt, ct, i, n);\n        return a ? et.find(function (e) {\n          return e.id === a.id;\n        }) : null;\n      },\n      vt = G(),\n      ft = vt.showTooltipFromEvent,\n      gt = vt.hideTooltip,\n      Lt = function (e) {\n        var t = ut(e);\n        t ? (null == Be || Be(t, e), ot(t.id), ft(r(Ee, {\n          datum: t\n        }), e)) : (ot(null), gt());\n      };\n    return W(\"canvas\", {\n      ref: qe,\n      width: Ue * Q,\n      height: Ze * Q,\n      style: {\n        width: Ue,\n        height: Ze,\n        cursor: De ? \"auto\" : \"normal\"\n      },\n      onMouseEnter: De ? Lt : void 0,\n      onMouseMove: De ? Lt : void 0,\n      onMouseLeave: De ? function () {\n        gt();\n      } : void 0,\n      onClick: De ? function (e) {\n        if (Ve) {\n          var t = ut(e);\n          t && Ve(t, e);\n        }\n      } : void 0\n    });\n  },\n  ie = function (e) {\n    var t = e.isInteractive,\n      i = void 0 === t ? Y.isInteractive : t,\n      n = e.theme,\n      a = e.renderWrapper,\n      r = F(e, ee);\n    return W(u, {\n      isInteractive: i,\n      renderWrapper: a,\n      theme: n,\n      children: W(te, E({\n        isInteractive: i\n      }, r))\n    });\n  },\n  ne = function (e) {\n    return W(L, {\n      children: function (t) {\n        var i = t.width,\n          n = t.height;\n        return W(ie, E({\n          width: i,\n          height: n\n        }, e));\n      }\n    });\n  };\nexport { $ as Pie, ie as PieCanvas, _ as ResponsivePie, ne as ResponsivePieCanvas, Y as defaultProps, P as useNormalizedData, J as usePie, q as usePieArcs, K as usePieFromBox, N as usePieLayerContext };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAWO;EAAMA,IAAa,UAAHC;IAMU,IAL7BC,IAAKD,EAALC;MACAC,IAAMF,EAANE;MACAC,IAAOH,EAAPG;MACAC,IAAIJ,EAAJI;MACAC,IAAWL,EAAXK;IAEA,OACIC;MAAAC,UACKJ,EAAQK,IAAI,UAACC,GAAQC;QAAS;QAAA,OAC3BJ,EAACK,GAAYC,MAELH,GAAM;UACVI,gBAAgBZ;UAChBa,iBAAiBZ;UACjBE,MAAiB,SAAbW,IAAEN,EAAOL,QAAIW,IAAIX;UACrBC,aAAaI,EAAOJ,cAAcA,SAAcW;QAAAA,IAL3CN;MAAAA;IAAAA,EAUzB;EAAA;EC5BaO,IAAe;IACxBC,IAAI;IACJC,OAAO;IACPC,cAAa;IACbC,aAAa;IACbC,UAAU;IACVC,cAAc;IAEdC,QAAQ,CAAC,QAAQ,iBAAiB,aAAa;IAG/CC,YAAY;IACZC,UAAU;IACVC,MAAK;IACLC,yBAAyB;IACzBC,yBAAyB;IAGzBC,aAAa;IACbC,aAAa;MACTC,MAAM;MACNC,WAAW,CAAC,CAAC,UAAU;IAAA;IAI3BC,kBAAiB;IACjBC,UAAU;IACVC,oBAAoB;IACpBC,uBAAuB;IACvBC,oBAAoB;MAAEC,OAAO;IAAA;IAG7BC,sBAAqB;IACrBC,cAAc;IACdC,wBAAwB;IACxBC,qBAAqB;IACrBC,6BAA6B;IAC7BC,6BAA6B;IAC7BC,wBAAwB;IACxBC,yBAAyB;IACzBC,wBAAwB;MAAET,OAAO;IAAA;IACjCU,oBAAoB;MAAEV,OAAO;IAAA;IAE7BW,QAAQ;MAAEC,QAAQ;IAAA;IAClBC,MAAM;IACNC,MAAM;IAENC,gBAAe;IAEfC,UAAS;IACTC,cAAc;IACdC,gBAAgB;IAEhBC,SCtDsB,UAAH1D;MAAA,IAAiB2D,IAAK3D,EAAL2D;MAAK,OACzCrD,EAACsD,GAAY;QACT1C,IAAIyC,EAAMzC;QACVC,OAAOwC,EAAME;QACbC,aAAY;QACZC,OAAOJ,EAAMI;MAAAA,EACf;IAAA;IDkDF5D,SAAS;IAET6D,MAAM;IAENC,YAA8B,sBAAXC,UAAgD,SAA1BC,IAAGD,OAAOE,oBAAgBD,IAAQ;EAAA;EAAAE;EErClEC,IAAoB,UAAHtE;IAUyB,IATnDI,IAAIJ,EAAJI;MAAImE,MACJrD;MAAAA,SAAE,UAAGD,EAAaC,KAAEqD;MAAAC,MACpBrD;MAAAA,SAAK,UAAGF,EAAaE,QAAKqD;MAC1BC,IAAWzE,EAAXyE;MAAWC,MACXxB;MAAAA,SAAM,UAAGjC,EAAaiC,SAAMwB;MAMtBC,IAAQC,EAAuC1D;MAC/C2D,IAAWD,EAAsCzD;MACjD2D,IAAcC,EAA0BN;MAExCO,IAAWC,EACb/B,GACA;IAGJ,OAAOgC,EACH;MAAA,OACI9E,EAAKI,IAAI;QAAS;UACR2E,IAAUR,EAAMhB;UAChByB,IAAaP,EAASlB;UAEtB0B,IAA2E;YAC7EnE,IAAIiE;YACJG,OAAkB,SAAbC,IAAE5B,EAAM2B,SAAKC,IAAIJ;YACtBK,SAAQ;YACRrE,OAAOiE;YACPvB,gBAAgBiB,EAAYM;YAC5BhF,MAAMuD;UAAAA;QAGV,aACO0B,GAAe;UAClBtB,OAAOiB,EAASK;QAAAA,EAExB;MAAA;IAAA,GACJ,CAACjF,GAAMuE,GAAOE,GAAUC,GAAaE,GAE7C;EAAA;EAKaS,IAAa,UAAHC;IAiClB,IAhCDtF,IAAIsF,EAAJtF;MACAqB,IAAUiE,EAAVjE;MACAC,IAAQgE,EAARhE;MACAL,IAAWqE,EAAXrE;MACAsE,IAAWD,EAAXC;MACArE,IAAQoE,EAARpE;MACAF,IAAWsE,EAAXtE;MACAwE,IAAQF,EAARE;MACAhE,IAAuB8D,EAAvB9D;MACAC,IAAuB6D,EAAvB7D;MACAgE,IAASH,EAATG;MACAC,IAAiBJ,EAAjBI;MAsBMC,IAAMb,EAAQ;QAChB,IAAMc,IAAWC,IACZ9E,MAAM;UAAC,OAAI+E,EAAE/E,KAAM;QAAA,GACnBM,WAAW0E,EAAiB1E,IAC5BC,SAASyE,EAAiBzE,IAC1BJ,SAAS6E,EAAiB7E;QAM/B,OAJKF,KACD4E,EAASI,WAAW,OAGjBJ,CACV;MAAA,GAAE,CAACvE,GAAYC,GAAUJ,GAAUF;MAE9BiF,IAASnB,EAAQ;QACnB,IAAMoB,IAAalG,EAAKmG,OAAO;UAAI,QAAKV,EAAUW,SAASC,EAAKvF;QAAAA;QA0ChE,OAAO;UAAEwF,aAzCWX,EAAIO,GAAY9F,IAChC,UACImG;YAOA,IAAMC,IAAQC,KAAKC,IAAIH,EAAIjF,WAAWiF,EAAIlF;YAE1C,aACOkF,EAAIvG,MAAI;cACXuG,KAAK;gBACDI,OAAOJ,EAAII;gBACXtF,YAAYkF,EAAIlF;gBAChBC,UAAUiF,EAAIjF;gBACdL,aACIuE,MAAae,EAAIvG,KAAKc,KAChBG,IAAcO,IACdP;gBACVsE,aACIC,MAAae,EAAIvG,KAAKc,KAChByE,IAAc9D,IACd8D;gBACVqB,WAAWrB,IAActE;gBACzBC,UAAUqF,EAAIrF;gBACdsF;gBACAK,UAAUC,EAAiBN;cAAAA;YAAAA,EAGvC;UAAA;UAUkBO,YARsB/G,EAAKI,IAAI;YAAI,OAAK;cAC1DU,IAAIuF,EAAKvF;cACToE,OAAOmB,EAAKnB;cACZvB,OAAO0C,EAAK1C;cACZyB,QAAQK,EAAUW,SAASC,EAAKvF;cAChCd,MAAMqG;YAAAA,CACT;UAAA;QAAA,CAGL;MAAA,GAAG,CACCV,GACA3F,GACAyF,GACAD,GACAvE,GACAO,GACA+D,GACA9D;MAIEsF,IAAad,EAAOc;MACpBC,IAAuBC,EAAOvB;IAMpC,OALAwB,EAAU;MACsC,qBAAjCF,EAAqBG,WAChCH,EAAqBG,QAAQJ,EACjC;IAAA,GAAG,CAACC,GAAsBD,KAEnBd,CACX;EAAA;EAQMmB,IAAc,UAAHC;IAQX,IAPQC,IAAiBD,EAA3B7B;MACA+B,IAAgBF,EAAhBE;MAAgBC,MAChBC;MAMMC,SAA2C,MAArBJ;MAE5BK,IAAgDC,EAC3CF,IAAiC,YATpB,MAAHF,IAAG,OAAIA;MAQfK,IAAgBF;MAAEG,IAAmBH;IAmB5C,OAAO;MAAEnC,UAfQkC,IAAeJ,IAAoBO;MAejCE,aAbCC,EAChB,UAAClH;QACOyG,KACAA,EAAiBzG,IAGhB4G,KACDI,EAAoBhH,EAE3B;MAAA,GACD,CAAC4G,GAAcH,GAAkBO;IAAAA,CAIzC;EAAA;EAMaG,IAAS,UAAHC;IAgCb,IA/BFlI,IAAIkI,EAAJlI;MACAmI,IAAMD,EAANC;MACAlH,IAAWiH,EAAXjH;MAAWmH,MACX/G;MAAAA,SAAU,UAAGR,EAAaQ,aAAU+G;MAAAC,MACpC/G;MAAAA,SAAQ,UAAGT,EAAaS,WAAQ+G;MAAAC,MAChCpH;MAAAA,SAAQ,UAAGL,EAAaK,WAAQoH;MAAAC,MAChCvH;MAAAA,SAAW,UAAGH,EAAaG,cAAWuH;MAAAC,MACtCrH;MAAAA,SAAY,UAAGN,EAAaM,eAAYqH;MAAAC,MACxCjH;MAAAA,SAAuB,UAAGX,EAAaW,0BAAuBiH;MAAAC,MAC9DjH;MAAAA,SAAuB,UAAGZ,EAAaY,0BAAuBiH;MACpDpB,IAAiBY,EAA3B1C;MACA+B,IAAgBW,EAAhBX;MACAE,IAAeS,EAAfT;MACA/B,IAAiBwC,EAAjBxC;MAmBAiD,IAAkCvB,EAAY;QAC1C5B,UAAU8B;QACVC;QACAE;MAAAA;MAHIjC,IAAQmD,EAARnD;MAAUuC,IAAWY,EAAXZ;MAMlBa,IAAkChB,EAAoB;MAA/CnC,IAASmD;MAAEC,IAAYD;MACxBE,IAAUzD,EAAW;QACvBrF;QACAqB;QACAC;QACAL;QACAsE,aAAa4C;QACbjH;QACAF;QACAwE;QACAhE;QACAC;QACAgE;QACAC;MAAAA;MAGEzF,IAAc+H,EAAY,UAAClH;QAC7B+H,EAAa;UAAK,OACdE,EAAMC,QAAQlI,MAAO,IAAIiI,EAAM5C,OAAO;YAAI,OAAIE,MAASvF,CAAE;UAAA,QAACmI,OAAOF,GAAK,CAAEjI,GAAG;QAAA,EAElF;MAAA,GAAE;IAIH,aAAYgI,GAAO;MAAEI,cAFAC,EAAgB;QAAEhI;QAAcD,UAAU6E,EAAiB7E;MAAAA;MAE7C6G;MAAa9H;IAAAA,EACpD;EAAA;EAUamJ,IAAgB,UAAHC;IAoChB,IAnCNrJ,IAAIqJ,EAAJrJ;MACAH,IAAKwJ,EAALxJ;MACAC,IAAMuJ,EAANvJ;MAAMwJ,MACNrI;MAAasI,SAAgB,UAAG1I,EAAaI,cAAWqI;MAAAE,MACxDnI;MAAAA,SAAU,UAAGR,EAAaQ,aAAUmI;MAAAC,MACpCnI;MAAAA,SAAQ,UAAGT,EAAaS,WAAQmI;MAAAC,MAChCxI;MAAAA,SAAQ,UAAGL,EAAaK,WAAQwI;MAAAC,MAChC3I;MAAAA,SAAW,UAAGH,EAAaG,cAAW2I;MAAAC,MACtCzI;MAAAA,SAAY,UAAGN,EAAaM,eAAYyI;MAAAC,MACxCtI;MAAAA,SAAG,UAAGV,EAAaU,MAAGsI;MAAAC,MACtBtI;MAAAA,SAAuB,UAAGX,EAAaW,0BAAuBsI;MAAAC,MAC9DtI;MAAAA,SAAuB,UAAGZ,EAAaY,0BAAuBsI;MACpDzC,IAAiB+B,EAA3B7D;MACA+B,IAAgB8B,EAAhB9B;MACAE,IAAe4B,EAAf5B;MACA/B,IAAiB2D,EAAjB3D;MAqBAsE,IAAkC5C,EAAY;QAC1C5B,UAAU8B;QACVC;QACAE;MAAAA;MAHIjC,IAAQwE,EAARxE;MAAUuC,IAAWiC,EAAXjC;MAMlBkC,IAAkCrC,EAAoB;MAA/CnC,IAASwE;MAAEpB,IAAYoB;MACxBC,IAAgBpF,EAAQ;QAC1B,IAMIqF;UANAhC,IAAS1B,KAAK2D,IAAIvK,GAAOC,KAAU;UACnCmB,IAAckH,IAAS1B,KAAK2D,IAAIb,GAAkB;UAElDc,IAAUxK,IAAQ;UAClByK,IAAUxK,IAAS;QAGvB,IAAIyB,GAAK;UACL,QAA2BgJ,EACvBF,GACAC,GACAnC,GACA9G,IAAa,IACbC,IAAW;YALPkJ,IAAMC,EAAND;YAAWE,IAAGC;YAOhBC,IAAQnE,KAAK2D,IAAIvK,IAAQ6K,EAAI7K,OAAOC,IAAS4K,EAAI5K;YAEjD+K,IAKF;cACAhL,OAAO6K,EAAI7K,QAAQ+K;cACnB9K,QAAQ4K,EAAI5K,SAAS8K;YAAAA;UAEzBC,EAAYC,KAAKjL,IAAQgL,EAAYhL,SAAS,GAC9CgL,EAAYE,KAAKjL,IAAS+K,EAAY/K,UAAU,GAEhDuK,KAAYA,IAAUK,EAAII,KAAKJ,EAAI7K,QAAS6K,EAAI7K,QAAQ+K,IAAQC,EAAYC,GAC5ER,KAAYA,IAAUI,EAAIK,KAAKL,EAAI5K,SAAU4K,EAAI5K,SAAS8K,IAAQC,EAAYE,GAE9EZ,IAAc;YAAEO;YAAKE;YAAOJ;UAAAA,GAE5BrC,KAAkByC,GAClB3J,KAA4B2J,CAChC;QAAA;QAEA,OAAO;UACHP;UACAC;UACAnC;UACAlH;UACA+J,OAAOb;QAAAA,CAEf;MAAA,GAAG,CAACtK,GAAOC,GAAQyJ,GAAkBlI,GAAYC,GAAUC;MAErDuH,IAAUzD,EAAW;QACvBrF;QACAqB;QACAC;QACAL,aAAaiJ,EAAcjJ;QAC3BsE,aAAa2E,EAAc/B;QAC3BjH;QACAF;QACAwE;QACAhE;QACAC;QACAgE;QACAC;MAAAA;MAGEzF,IAAc+H,EAAY,UAAClH;QAC7B+H,EAAa;UAAK,OACdE,EAAMC,QAAQlI,MAAO,IAAIiI,EAAM5C,OAAO;YAAI,OAAIE,MAASvF,CAAE;UAAA,QAACmI,OAAOF,GAAK,CAAEjI,GAAG;QAAA,EAElF;MAAA,GAAE;IAOH;MACIoI,cANiBC,EAAgB;QACjChI;QACAD,UAAU6E,EAAiB7E;MAAAA;MAK3BsE;MACAuC;MACA9H;IAAAA,GACG6I,GACAoB,EAEX;EAAA;EAKae,IAAqB,UAAHC;IAAA,IAC3B5E,IAAW4E,EAAX5E;MACA4C,IAAYgC,EAAZhC;MACAmB,IAAOa,EAAPb;MACAC,IAAOY,EAAPZ;MACAnC,IAAM+C,EAAN/C;MACAlH,IAAWiK,EAAXjK;IAAW,OAEX6D,EACI;MAAA,OAAO;QACHwB;QACA4C;QACAmB;QACAC;QACAnC;QACAlH;MAAAA,CACH;IAAA,GACD,CAACqF,GAAa4C,GAAcmB,GAASC,GAASnC,GAAQlH,GACzD;EAAA;EC/aQkK,IAAO,UAAHvL;IAcU,IAbvBwL,IAAMxL,EAANwL;MACApL,IAAIJ,EAAJI;MACAkJ,IAAYtJ,EAAZsJ;MACAxH,IAAW9B,EAAX8B;MACAC,IAAW/B,EAAX+B;MACAuB,IAAatD,EAAbsD;MACAmI,IAAOzL,EAAPyL;MACAC,IAAY1L,EAAZ0L;MACAC,IAAW3L,EAAX2L;MACAC,IAAY5L,EAAZ4L;MACAzD,IAAWnI,EAAXmI;MACAzE,IAAO1D,EAAP0D;MACAD,IAAczD,EAAdyD;MAEAoI,IAA8CC;MAAtCC,IAAoBF,EAApBE;MAAsBC,IAAWH,EAAXG;MAExBC,IAAc/G,EAAQ;QACxB,IAAK5B,GAEL,OAAO,UAACK,GAAgCuI;UAAAA,QACpCT,OAAU9H,GAAOuI;QAAAA,CAEzB;MAAA,GAAG,CAAC5I,GAAemI;MAEbU,IAAmBjH,EAAQ;QAC7B,IAAK5B,GAEL,OAAO,UAACK,GAAgCuI;UACpCH,EAAqBK,EAAc1I,GAAS;YAAEC;UAAAA,IAAUuI,IACxD/D,EAAYxE,EAAMzC,aAClBwK,OAAe/H,GAAOuI;QAAAA,CAE9B;MAAA,GAAG,CAAC5I,GAAeyI,GAAsB5D,GAAauD,GAAchI;MAE9D2I,IAAkBnH,EAAQ;QAC5B,IAAK5B,GAEL,OAAO,UAACK,GAAgCuI;UACpCH,EAAqBK,EAAc1I,GAAS;YAAEC;UAAAA,IAAUuI,YACxDP,OAAchI,GAAOuI;QAAAA,CAE5B;MAAA,GAAE,CAAC5I,GAAeyI,GAAsBJ,GAAajI;MAEhD4I,IAAmBpH,EAAQ;QAC7B,IAAK5B,GAEL,OAAO,UAACK,GAAgCuI;UACpCF,KACA7D,EAAY,eACZyD,OAAejI,GAAOuI;QAAAA,CAE7B;MAAA,GAAE,CAAC5I,GAAe0I,GAAa7D,GAAayD;IAE7C,OACItL,EAACiM,GAAS;MACNf,QAAQA;MACRpL,MAAMA;MACNkJ,cAAcA;MACdxH,aAAaA;MACbC,aAAaA;MACb0B,gBAAgBA;MAChBgI,SAASQ;MACTP,cAAcS;MACdR,aAAaU;MACbT,cAAcU;IAAAA,EAG1B;EAAA;EAAAE;EC1EMC,IAAW,UAAHzM;IAsEe,IArEzBI,IAAIJ,EAAJI;MAAImE,MACJrD;MAAAA,SAAE,UAAGD,EAAaC,KAAEqD;MAAAC,MACpBrD;MAAAA,SAAK,UAAGF,EAAaE,QAAKqD;MAC1BC,IAAWzE,EAAXyE;MAAWiI,MACXtL;MAAAA,SAAW,UAAGH,EAAaG,cAAWsL;MAAAC,MAEtCnL;MAAAA,SAAM,UAAGP,EAAaO,SAAMmL;MAAAC,MAE5BnL;MAAAA,SAAU,UAAGR,EAAaQ,aAAUmL;MAAAC,MACpCnL;MAAAA,SAAQ,UAAGT,EAAaS,WAAQmL;MAAAC,MAChCxL;MAAAA,SAAQ,UAAGL,EAAaK,WAAQwL;MAAAC,MAChCpL;MAAAA,SAAG,UAAGV,EAAaU,MAAGoL;MAAAC,MACtB3L;MAAasI,SAAgB,UAAG1I,EAAaI,cAAW2L;MAAAC,MACxD1L;MAAAA,SAAY,UAAGN,EAAaM,eAAY0L;MAAAC,MACxCtL;MAAAA,SAAuB,UAAGX,EAAaW,0BAAuBsL;MAAAC,MAC9DtL;MAAAA,SAAuB,UAAGZ,EAAaY,0BAAuBsL;MAE9DlN,IAAKD,EAALC;MACAC,IAAMF,EAANE;MACQkN,IAAapN,EAArBqN;MAAM3I,MAENxB;MAAAA,SAAM,UAAGjC,EAAaiC,SAAMwB;MAAA4I,MAG5BxL;MAAAA,SAAW,UAAGb,EAAaa,cAAWwL;MAAAC,MACtCxL;MAAAA,SAAW,UAAGd,EAAac,cAAWwL;MAAAC,MAGtCtL;MAAAA,SAAe,UAAGjB,EAAaiB,kBAAesL;MAAAC,MAC9CtL;MAAAA,SAAQ,UAAGlB,EAAakB,WAAQsL;MAAAC,OAChCtL;MAAAA,UAAkB,WAAGnB,EAAamB,qBAAkBsL;MAAAC,OACpDrL;MAAAA,UAAkB,WAAGrB,EAAaqB,qBAAkBqL;MAAAC,OACpDvL;MAAAA,UAAqB,WAAGpB,EAAaoB,wBAAqBuL;MAC1DC,KAAkB7N,EAAlB6N;MAAkBC,OAGlBtL;MAAAA,UAAmB,WAAGvB,EAAauB,sBAAmBsL;MAAAC,OACtDtL;MAAAA,UAAY,WAAGxB,EAAawB,eAAYsL;MAAAC,OACxCtL;MAAAA,UAAsB,WAAGzB,EAAayB,yBAAsBsL;MAAAC,OAC5DtL;MAAAA,UAAmB,WAAG1B,EAAa0B,sBAAmBsL;MAAAC,OACtDtL;MAAAA,UAA2B,WAAG3B,EAAa2B,8BAA2BsL;MAAAC,OACtEtL;MAAAA,UAA2B,WAAG5B,EAAa4B,8BAA2BsL;MAAAC,OACtEtL;MAAAA,UAAsB,WAAG7B,EAAa6B,yBAAsBsL;MAAAC,OAC5DtL;MAAAA,UAAuB,WAAG9B,EAAa8B,0BAAuBsL;MAAAC,OAC9DtL;MAAAA,UAAsB,WAAG/B,EAAa+B,yBAAsBsL;MAAAC,OAC5DtL;MAAAA,UAAkB,WAAGhC,EAAagC,qBAAkBsL;MACpDC,KAAqBxO,EAArBwO;MAAqBC,OAGrBrL;MAAAA,UAAI,WAAGnC,EAAamC,OAAIqL;MAAAC,OACxBrL;MAAAA,UAAI,WAAGpC,EAAaoC,OAAIqL;MAAAC,OAGxBrL;MAAAA,UAAa,WAAGrC,EAAaqC,gBAAaqL;MAC1ClD,KAAOzL,EAAPyL;MACAC,KAAY1L,EAAZ0L;MACAC,KAAW3L,EAAX2L;MACAC,KAAY5L,EAAZ4L;MAAYgD,OACZlL;MAAAA,UAAO,WAAGzC,EAAayC,UAAOkL;MACpBlH,KAAiB1H,EAA3B4F;MACA+B,KAAgB3H,EAAhB2H;MACAE,KAAe7H,EAAf6H;MAAegH,OAEfpL;MAAAA,UAAc,WAAGxC,EAAawC,iBAAcoL;MAAAC,OAE5C3O;MAAAA,UAAO,WAAGc,EAAad,UAAO2O;MAC9BhJ,KAAiB9F,EAAjB8F;MAAiBiJ,OAEjB/K;MAAAA,UAAI,WAAG/C,EAAa+C,OAAI+K;MAExBC,KAAqEC,EACjEhP,GACAC,GACAkN;MAHI8B,KAAUF,GAAVE;MAAYC,KAAWH,GAAXG;MAAa9B,KAAM2B,GAAN3B;MAAQ+B,KAAUJ,GAAVI;MAAYC,KAAWL,GAAXK;MAM/CC,KAAiBhL,EAA4B;QAC/ClE;QACAc;QACAC;QACAsD;QACAvB;MAAAA;MAGJqM,KAUI/F,EAAwB;QACxBpJ,MAAMkP;QACNrP,OAAOmP;QACPlP,QAAQmP;QACR1N;QACAN,aAAasI;QACblI;QACAC;QACAJ;QACAF;QACAG;QACAK;QACAC;QACA+D,UAAU8B;QACVC;QACAE;QACA/B;MAAAA;MAzBAY,KAAW6I,GAAX7I;MACAS,KAAUoI,GAAVpI;MACAmC,KAAYiG,GAAZjG;MACAmB,KAAO8E,GAAP9E;MACAC,KAAO6E,GAAP7E;MACAnC,KAAMgH,GAANhH;MACAlH,KAAWkO,GAAXlO;MACA8G,KAAWoH,GAAXpH;MACA9H,KAAWkP,GAAXlP;MAoBEmP,KAAYC,EAASrM,IAAMsD,IAAarD;MAExCqM,KAA2C;QAC7CC,MAAM;QACNC,eAAe;QACfC,WAAW;QACX1P,SAAS;MAAA;IAGTqB,EAAOgF,SAAS,YAChBkJ,GAAUC,OACNrP,EAACiL,GAAI;MAEDC,QAAQ,CAACf,IAASC;MAClBtK,MAAMsG;MACN4C,cAAcA;MACdxH,aAAaA;MACbC,aAAaA;MACbuB,eAAeA;MACfmI,SAASA;MACTC,cAAcA;MACdC,aAAaA;MACbC,cAAcA;MACdzD,aAAaA;MACbzE,SAASA;MACTD,gBAAgBA;IAAAA,GAbZ,UAkBZjB,MAAuBhB,EAAOgF,SAAS,qBACvCkJ,GAAUE,gBACNtP,EAACwP,GAAkB;MAEftE,QAAQ,CAACf,IAASC;MAClBtK,MAAMsG;MACNpB,OAAO7C;MACPsN,WAAWrN;MACXsN,QAAQrN;MACRsN,gBAAgBrN;MAChBsN,gBAAgBrN;MAChBsN,aAAarN;MACbsN,YAAYrN;MACZsN,WAAWrN;MACXsN,WAAWrN;MACXsN,WAAW/B;IAAAA,GAZP,mBAiBZtM,KAAmBV,EAAOgF,SAAS,iBACnCkJ,GAAUG,YACNvP,EAACkQ,GAAc;MAEXhF,QAAQ,CAACf,IAASC;MAClBtK,MAAMsG;MACNpB,OAAOnD;MACPsO,cAAcpO;MACd0N,WAAW3N;MACXiO,WAAW/N;MACXmB,gBAAgBA;MAChB8M,WAAW1C;IAAAA,GARP,eAaZ1N,GAAQuQ,SAAS,KAAKlP,EAAOgF,SAAS,eACtCkJ,GAAUvP,UACNG,EAACP,GAAU;MAEPE,OAAOmP;MACPlP,QAAQmP;MACRjP,MAAM+G;MACNhH,SAASA;MACTE,aAAaA;IAAAA,GALT;IAUhB,IAAMsQ,KAAetF,EAA6B;MAC9C3E;MACA4C;MACAmB;MACAC;MACAnC;MACAlH;IAAAA;IAGJ,OACIf,EAACsQ,GAAU;MACP3Q,OAAOiP;MACPhP,QAAQiP;MACR9B,QAAQA;MACRjK,MAAMoM;MACNxL,MAAMA;MAAKzD,UAEViB,EAAOhB,IAAI,UAACqQ,GAAOnQ;QAChB,YAAuCM,MAAnC0O,GAAUmB,KACHnB,GAAUmB,KAGA,qBAAVA,IACAvQ,EAACwQ,GAAQ;UAAAvQ,UAAU6L,EAAcyE,GAAOF;QAAAA,GAAzBjQ,KAGnB;MAAA;IAAA,EAIvB;EAAA;EAEaqQ,IAAM,UAAHrL;IAAA,UACZpC;MAAAA,SAAa,UAAGrC,EAAaqC,gBAAa0N;MAAAC,MAC1C1N;MAAAA,SAAO,UAAGtC,EAAasC,UAAO0N;MAAAC,MAC9B1N;MAAAA,SAAY,UAAGvC,EAAauC,eAAY0N;MACxC3O,IAAKmD,EAALnD;MACA4O,IAAazL,EAAbyL;MACGC,IAAUrG;IAAA,OAEbzK,EAAC+Q,GAAS;MAEF9N;MACAD;MACAE;MACA2N;MACA5O;MAAKhC,UAGTD,EAACmM,GAAQ7L;QAAW0C,eAAeA;MAAAA,GAAmB8N;IAAAA,EAC9C;EAAA;EC/PHE,IAAgB,UACzBC;IAAsD,OAEtDjR,EAACkR,GAAiB;MAAAjR,UACb;QAAA,IAAGN,IAAKD,EAALC;UAAOC,IAAMF,EAANE;QAAM,OACbI,EAACyQ,GAAGnQ;UAAWX,OAAOA;UAAOC,QAAQA;QAAAA,GAAYqR,GAAS;MAAA;IAAA,EAE9C;EAAA;EAAAE;ECOlBC,KAAiB,UAAH1R;IAyDY,IAxD5BI,IAAIJ,EAAJI;MAAImE,MACJrD;MAAAA,SAAE,UAAGD,EAAaC,KAAEqD;MAAAC,MACpBrD;MAAAA,SAAK,UAAGF,EAAaE,QAAKqD;MAC1BC,IAAWzE,EAAXyE;MAAWiI,MACXtL;MAAAA,SAAW,UAAGH,EAAaG,cAAWsL;MAAAE,MAEtCnL;MAAAA,SAAU,UAAGR,EAAaQ,aAAUmL;MAAAC,MACpCnL;MAAAA,SAAQ,UAAGT,EAAaS,WAAQmL;MAAAC,MAChCxL;MAAAA,SAAQ,UAAGL,EAAaK,WAAQwL;MAAAC,MAChCpL;MAAAA,SAAG,UAAGV,EAAaU,MAAGoL;MAAAC,MACtB3L;MAAasI,SAAgB,UAAG1I,EAAaI,cAAW2L;MAAAC,MACxD1L;MAAAA,SAAY,UAAGN,EAAaM,eAAY0L;MAAAC,MACxCtL;MAAAA,SAAuB,UAAGX,EAAaW,0BAAuBsL;MAAAC,MAC9DtL;MAAAA,SAAuB,UAAGZ,EAAaY,0BAAuBsL;MAE9DlN,IAAKD,EAALC;MACAC,IAAMF,EAANE;MACQkN,IAAapN,EAArBqN;MAAMsE,MACN1N;MAAAA,SAAU,UAAGhD,EAAagD,aAAU0N;MAAAjN,MAEpCxB;MAAAA,SAAM,UAAGjC,EAAaiC,SAAMwB;MAAA4I,MAG5BxL;MAAAA,SAAW,UAAGb,EAAaa,cAAWwL;MAAAC,OACtCxL;MAAAA,UAAW,WAAGd,EAAac,cAAWwL;MAAAC,OAGtCtL;MAAAA,UAAe,WAAGjB,EAAaiB,kBAAesL;MAAAC,OAC9CtL;MAAAA,UAAQ,WAAGlB,EAAakB,WAAQsL;MAAAC,OAChCtL;MAAAA,UAAkB,WAAGnB,EAAamB,qBAAkBsL;MAAAC,OACpDrL;MAAAA,UAAkB,WAAGrB,EAAaqB,qBAAkBqL;MAAAC,OACpDvL;MAAAA,UAAqB,WAAGpB,EAAaoB,wBAAqBuL;MAAAE,OAG1DtL;MAAAA,UAAmB,WAAGvB,EAAauB,sBAAmBsL;MAAAC,OACtDtL;MAAAA,UAAY,WAAGxB,EAAawB,eAAYsL;MAAAC,OACxCtL;MAAAA,UAAsB,WAAGzB,EAAayB,yBAAsBsL;MAAAC,OAC5DtL;MAAAA,UAAmB,WAAG1B,EAAa0B,sBAAmBsL;MAAAC,OACtDtL;MAAAA,UAA2B,WAAG3B,EAAa2B,8BAA2BsL;MAAAC,OACtEtL;MAAAA,UAA2B,WAAG5B,EAAa4B,8BAA2BsL;MAAAC,OACtEtL;MAAAA,UAAsB,WAAG7B,EAAa6B,yBAAsBsL;MAAAC,OAC5DtL;MAAAA,UAAuB,WAAG9B,EAAa8B,0BAAuBsL;MAAAC,OAC9DtL;MAAAA,UAAsB,WAAG/B,EAAa+B,yBAAsBsL;MAAAC,OAC5DtL;MAAAA,UAAkB,WAAGhC,EAAagC,qBAAkBsL;MAAAI,OAGpDrL;MAAAA,UAAa,WAAGrC,EAAaqC,gBAAaqL;MAC1ClD,KAAOzL,EAAPyL;MACAE,KAAW3L,EAAX2L;MAAWiD,OACXlL;MAAAA,UAAO,WAAGzC,EAAayC,UAAOkL;MACpBlH,KAAiB1H,EAA3B4F;MACA+B,KAAgB3H,EAAhB2H;MACAE,KAAe7H,EAAf6H;MAAeiH,OAEf3O;MAAAA,UAAO,WAAGc,EAAad,UAAO2O;MAC9BhJ,KAAiB9F,EAAjB8F;MAEM8L,KAAWvK,EAAiC;MAC5C9E,KAAQsP;MAEd7C,KAAqEC,EACjEhP,GACAC,GACAkN;MAHIC,KAAM2B,GAAN3B;MAAQ+B,KAAUJ,GAAVI;MAAYC,KAAWL,GAAXK;MAAaH,KAAUF,GAAVE;MAAYC,KAAWH,GAAXG;MAM/CG,KAAiBhL,EAA4B;QAC/ClE;QACAc;QACAC;QACAsD;QACAvB;MAAAA;MAGJqM,KACI/F,EAAwB;QACpBpJ,MAAMkP;QACNrP,OAAOmP;QACPlP,QAAQmP;QACR1N;QACAN,aAAasI;QACblI;QACAC;QACAJ;QACAF;QACAG;QACAK;QACAC;QACA+D,UAAU8B;QACVC;QACAE;QACA/B;MAAAA;MAjBAY,KAAW6I,GAAX7I;MAAa4C,KAAYiG,GAAZjG;MAAcmB,KAAO8E,GAAP9E;MAASC,KAAO6E,GAAP7E;MAASnC,KAAMgH,GAANhH;MAAQlH,KAAWkO,GAAXlO;MAAa8G,KAAWoH,GAAXpH;MAoBpE2J,KAAiBC,EAA2ChQ,IAAaQ;MAEzEsN,KAAYmC,EAAsC;QACpD5R,MAAMsG;QACNpB,OAAOnD;QACP4N,WAAW3N;QACX4N,QAAQ3N;QACRgO,WAAW/N;MAAAA;MAGTsN,KAAgBqC,EAA0C;QAC5D7R,MAAMsG;QACNqJ,WAAWrN;QACXsN,QAAQrN;QACRsN,gBAAgBrN;QAChBsN,gBAAgBrN;QAChByC,OAAO7C;QACP6N,WAAWrN;QACXmN,YAAYrN;QACZsN,WAAWrN;MAAAA;IAGfsE,EAAU;MACN,IAAKsK,GAASrK,SAAd;QAEAqK,GAASrK,QAAQtH,QAAQiP,KAAajL,GACtC2N,GAASrK,QAAQrH,SAASiP,KAAclL;QAExC,IAAMiO,IAAMN,GAASrK,QAAQ4K,WAAW;QAExCD,EAAIE,MAAMnO,GAAYA,IAEtBiO,EAAIG,YAAY9P,GAAM+P,YACtBJ,EAAIK,SAAS,GAAG,GAAGrD,IAAYC,KAE/B+C,EAAIM,QACJN,EAAIO,UAAUpF,GAAOqF,MAAMrF,GAAOsF,MAClCrJ,GAAasJ,QAAQV,IAErBA,EAAIM,QACJN,EAAIO,UAAUhI,IAASC,KAEvBhE,GAAYmM,QAAQ;UAChBX,EAAIY,aACJZ,EAAIG,YAAY1L,EAAI5C,OAEpBmO,EAAIa,cAAcjB,GAAenL,IACjCuL,EAAIc,YAAYlR,GAEhBwH,GAAa3C,EAAIA,MAEjBuL,EAAI7O,QAEAvB,IAAc,KACdoQ,EAAIe,QAEZ;QAAA,KAE4B,MAAxBzQ,MACA0Q,EACIhB,GACAtC,IACArN,IACAO,MAIgB,MAApBZ,MACAiR,EAA6CjB,GAAKrC,IAAWtN,KAKjE2P,EAAIkB,WACJjT,GAAQ0S,QAAQ;UACZQ,EAAqBnB,GAAGtR,MACjBH,GAAM;YACTL,MAAMsG;YACN7F,gBAAgBuO;YAChBtO,iBAAiBuO;YACjB9M;UAAAA,GAER;QAAA,EA3DuB;MAAA;IA4D1B,GAAE,CACCqP,IACAxC,IACAC,IACAH,IACAC,IACA9B,GAAOsF,KACPtF,GAAOqF,MACPzO,GACAwG,IACAC,IACApB,IACA5C,IACA5E,GACAgQ,IACA5P,IACA2N,IACArN,IACAoN,IACA9M,IACA3C,IACAoC;IAGJ,IAAMoN,KAAOzK,EACT;QAAA,OACIwB,GAAYlG,IAAI;UAAK;YACjBU,IAAIyC,EAAMzC;UAAAA,GACPyC,EAAMgD,IAAG;QAAA;MAAA,GAEpB,CAACD;MAGC4M,KAAkB,UAACpH;QACrB,KAAK0F,GAASrK,SAAS,OAAO;QAE9B,QAAegM,EAAkB3B,GAASrK,SAAS2E;UAA5ChB,IAACsI;UAAErI,IAACqI;UAELC,IAAaC,EACfrG,GAAOqF,OAAOjI,IACd4C,GAAOsF,MAAMjI,IACbnC,IACAlH,IACAsO,IACAzE,GACAC;QAGJ,OAAKsI,IAEE/M,GAAYiN,KAAK;UAAK,OAAIhQ,EAAMzC,OAAOuS,EAAWvS;QAAAA,KAFjC;MAAA;MAK5B2K,KAA8CC;MAAtCC,KAAoBF,GAApBE;MAAsBC,KAAWH,GAAXG;MAExB4H,KAAmB,UAAC1H;QACtB,IAAMvI,IAAQ2P,GAAgBpH;QAC1BvI,aACAgI,SAAchI,GAAOuI,IACrB/D,GAAYxE,EAAMzC,KAClB6K,GAAqBK,EAAc1I,IAAS;UAAEC;QAAAA,IAAUuI,OAExD/D,GAAY,OACZ6D;MAAAA;IAiBR,OACI1L;MACIuT,KAAKjC;MACL3R,OAAOiP,KAAajL;MACpB/D,QAAQiP,KAAclL;MACtB6P,OAAO;QACH7T,OAAOiP;QACPhP,QAAQiP;QACR4E,QAAQzQ,KAAgB,SAAS;MAAA;MAErCoI,cAAcpI,KAAgBsQ,UAAmB5S;MACjD2K,aAAarI,KAAgBsQ,UAAmB5S;MAChD4K,cAActI,KAzBG;QACrB0I;MAAAA,SAwBqDhL;MACjDyK,SAASnI,KAtBG,UAAC4I;QACjB,IAAKT,IAAL;UAEA,IAAM9E,IAAM2M,GAAgBpH;UACxBvF,KACA8E,GAAQ9E,GAAKuF,EAJH;QAAA;MAAA,SAqB6BlL;IAAAA,EAGnD;EAAA;EAEagT,KAAY,UAAHtO;IAAA,UAClBpC;MAAAA,SAAa,UAAGrC,EAAaqC,gBAAa0N;MAC1CzO,IAAKmD,EAALnD;MACA4O,IAAazL,EAAbyL;MACGC,IAAUrG;IAAA,OAEbzK,EAAC+Q,GAAS;MAAO/N;MAAe6N;MAAe5O;MAAKhC,UAChDD,EAACoR,IAAc9Q;QAAW0C,eAAeA;MAAAA,GAAmB8N;IAAAA,EACpD;EAAA;EC1SH6C,KAAsB,UAC/B1C;IAAyD,OAEzDjR,EAACkR,GAAiB;MAAAjR,UACb;QAAA,IAAGN,IAAKD,EAALC;UAAOC,IAAMF,EAANE;QAAM,OACbI,EAAC0T,IAASpT;UAAWX,OAAOA;UAAOC,QAAQA;QAAAA,GAAYqR,GAAS;MAAA;IAAA,EAEpD;EAAA;AAAA","names":["PieLegends","_ref","width","height","legends","data","toggleSerie","_jsx","children","map","legend","i","BoxLegendSvg","_extends","containerWidth","containerHeight","_legend$data","undefined","defaultProps","id","value","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","fill","isInteractive","animate","motionConfig","transitionMode","tooltip","datum","BasicTooltip","formattedValue","enableChip","color","role","pixelRatio","window","_window$devicePixelRa","devicePixelRatio","j","useNormalizedData","_ref$id","_ref$value","valueFormat","_ref$colors","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","useMemo","datumId","datumValue","normalizedDatum","label","_datum$label","hidden","usePieArcs","_ref2","outerRadius","activeId","hiddenIds","forwardLegendData","pie","innerPie","d3Pie","d","degreesToRadians","sortValues","result","hiddenData","filter","includes","item","dataWithArc","arc","angle","Math","abs","index","thickness","angleDeg","radiansToDegrees","legendData","forwardLegendDataRef","useRef","useEffect","current","useActiveId","_ref3","activeIdFromProps","onActiveIdChange","_ref3$defaultActiveId","defaultActiveId","isControlled","_useState","useState","internalActiveId","setInternalActiveId","setActiveId","useCallback","usePie","_ref4","radius","_ref4$startAngle","_ref4$endAngle","_ref4$padAngle","_ref4$sortByValue","_ref4$cornerRadius","_ref4$activeInnerRadi","_ref4$activeOuterRadi","_useActiveId","_useState2","setHiddenIds","pieArcs","state","indexOf","concat","arcGenerator","useArcGenerator","usePieFromBox","_ref5","_ref5$innerRadius","innerRadiusRatio","_ref5$startAngle","_ref5$endAngle","_ref5$padAngle","_ref5$sortByValue","_ref5$cornerRadius","_ref5$fit","_ref5$activeInnerRadi","_ref5$activeOuterRadi","_useActiveId2","_useState3","computedProps","boundingBox","min","centerX","centerY","computeArcBoundingBox","points","_computeArcBoundingBo","box","_objectWithoutPropertiesLoose","ratio","adjustedBox","x","y","debug","usePieLayerContext","_ref6","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","_useTooltip","useTooltip","showTooltipFromEvent","hideTooltip","handleClick","event","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","ArcsLayer","U","InnerPie","_ref$sortByValue","_ref$layers","_ref$startAngle","_ref$endAngle","_ref$padAngle","_ref$fit","_ref$innerRadius","_ref$cornerRadius","_ref$activeInnerRadiu","_ref$activeOuterRadiu","partialMargin","margin","_ref$borderWidth","_ref$borderColor","_ref$enableArcLabels","_ref$arcLabel","_ref$arcLabelsSkipAng","_ref$arcLabelsTextCol","_ref$arcLabelsRadiusO","arcLabelsComponent","_ref$enableArcLinkLab","_ref$arcLinkLabel","_ref$arcLinkLabelsSki","_ref$arcLinkLabelsOff","_ref$arcLinkLabelsDia","_ref$arcLinkLabelsStr","_ref$arcLinkLabelsThi","_ref$arcLinkLabelsTex","_ref$arcLinkLabelsTex2","_ref$arcLinkLabelsCol","arcLinkLabelComponent","_ref$defs","_ref$fill","_ref$isInteractive","_ref$tooltip","_ref$transitionMode","_ref$legends","_ref$role","_useDimensions","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","normalizedData","_usePieFromBox","boundDefs","bindDefs","layerById","arcs","arcLinkLabels","arcLabels","ArcLinkLabelsLayer","skipAngle","offset","diagonalLength","straightLength","strokeWidth","textOffset","textColor","linkColor","component","ArcLabelsLayer","radiusOffset","length","layerContext","SvgWrapper","layer","Fragment","Pie","_ref2$isInteractive","_ref2$animate","_ref2$motionConfig","renderWrapper","otherProps","Container","ResponsivePie","props","ResponsiveWrapper","ee","InnerPieCanvas","_ref$pixelRatio","canvasEl","useTheme","getBorderColor","useInheritedColor","useArcLabels","useArcLinkLabels","ctx","getContext","scale","fillStyle","background","fillRect","save","translate","left","top","context","forEach","beginPath","strokeStyle","lineWidth","stroke","drawCanvasArcLinkLabels","drawCanvasArcLabels","restore","renderLegendToCanvas","getArcFromMouse","getRelativeCursor","_getRelativeCursor","hoveredArc","findArcUnderCursor","find","handleMouseHover","ref","style","cursor","PieCanvas","ResponsivePieCanvas"],"sources":["/Users/parijatchatterjee/Desktop/TrailsExplore/node_modules/@nivo/pie/src/PieLegends.tsx","/Users/parijatchatterjee/Desktop/TrailsExplore/node_modules/@nivo/pie/src/props.ts","/Users/parijatchatterjee/Desktop/TrailsExplore/node_modules/@nivo/pie/src/PieTooltip.tsx","/Users/parijatchatterjee/Desktop/TrailsExplore/node_modules/@nivo/pie/src/hooks.ts","/Users/parijatchatterjee/Desktop/TrailsExplore/node_modules/@nivo/pie/src/Arcs.tsx","/Users/parijatchatterjee/Desktop/TrailsExplore/node_modules/@nivo/pie/src/Pie.tsx","/Users/parijatchatterjee/Desktop/TrailsExplore/node_modules/@nivo/pie/src/ResponsivePie.tsx","/Users/parijatchatterjee/Desktop/TrailsExplore/node_modules/@nivo/pie/src/PieCanvas.tsx","/Users/parijatchatterjee/Desktop/TrailsExplore/node_modules/@nivo/pie/src/ResponsivePieCanvas.tsx"],"sourcesContent":["import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, DatumId, LegendDatum } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: LegendDatum<RawDatum>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nexport const PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i: number) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcs', 'arcLinkLabels', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport {\n    MayHaveLabel,\n    CompletePieSvgProps,\n    ComputedDatum,\n    DatumId,\n    PieArc,\n    PieCustomLayerProps,\n    LegendDatum,\n    CommonPieProps,\n} from './types'\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: readonly RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n    forwardLegendData,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n    forwardLegendData?: CommonPieProps<RawDatum>['forwardLegendData']\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: LegendDatum<RawDatum>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    const result = useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData: LegendDatum<RawDatum>[] = data.map(item => ({\n            id: item.id,\n            label: item.label,\n            color: item.color,\n            hidden: hiddenIds.includes(item.id),\n            data: item,\n        }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n\n    // Forward the legends data if `forwardLegendData` is defined.\n    const legendData = result.legendData\n    const forwardLegendDataRef = useRef(forwardLegendData)\n    useEffect(() => {\n        if (typeof forwardLegendDataRef.current !== 'function') return\n        forwardLegendDataRef.current(legendData)\n    }, [forwardLegendDataRef, legendData])\n\n    return result\n}\n\n/**\n * Encapsulate the logic for defining/reading the active arc ID,\n * which can be either controlled (handled externally), or uncontrolled\n * (handled internally), we can optionally define a default value when\n * it's uncontrolled.\n */\nconst useActiveId = ({\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId = null,\n}: {\n    activeId?: DatumId | null\n    onActiveIdChange?: (id: DatumId | null) => void\n    defaultActiveId?: DatumId | null\n}) => {\n    const isControlled = typeof activeIdFromProps != 'undefined'\n\n    const [internalActiveId, setInternalActiveId] = useState<DatumId | null>(\n        !isControlled ? defaultActiveId : null\n    )\n\n    const activeId = isControlled ? activeIdFromProps : internalActiveId\n\n    const setActiveId = useCallback(\n        (id: DatumId | null) => {\n            if (onActiveIdChange) {\n                onActiveIdChange(id)\n            }\n\n            if (!isControlled) {\n                setInternalActiveId(id)\n            }\n        },\n        [isControlled, onActiveIdChange, setInternalActiveId]\n    )\n\n    return { activeId, setActiveId }\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    forwardLegendData,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n    | 'activeId'\n    | 'onActiveIdChange'\n    | 'defaultActiveId'\n    | 'forwardLegendData'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const { activeId, setActiveId } = useActiveId({\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n    })\n\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n        forwardLegendData,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n    forwardLegendData,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> &\n    Pick<\n        Partial<CompletePieSvgProps<RawDatum>>,\n        'activeId' | 'onActiveIdChange' | 'defaultActiveId' | 'forwardLegendData'\n    > & {\n        data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    }) => {\n    const { activeId, setActiveId } = useActiveId({\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n    })\n\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n        forwardLegendData,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        activeId,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter, tooltip])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove, tooltip])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport { PieLegends } from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId, MayHaveLabel } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    forwardLegendData,\n\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        activeId: activeIdFromProps,\n        onActiveIdChange,\n        defaultActiveId,\n        forwardLegendData,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcs: null,\n        arcLinkLabels: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum extends MayHaveLabel>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps, MayHaveLabel } from './types'\n\nexport const ResponsivePie = <RawDatum extends MayHaveLabel>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { createElement, useEffect, useMemo, useRef } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps, MayHaveLabel } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = defaultProps.pixelRatio,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n    activeId: activeIdFromProps,\n    onActiveIdChange,\n    defaultActiveId,\n\n    legends = defaultProps.legends,\n    forwardLegendData,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n            activeId: activeIdFromProps,\n            onActiveIdChange,\n            defaultActiveId,\n            forwardLegendData,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        borderWidth,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum extends MayHaveLabel>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps, MayHaveLabel } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum extends MayHaveLabel>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}